-- LAB 9
-- 1 (2 REZULTATE)
SELECT EMPLOYEE_ID
FROM WORKS_ON
WHERE PROJECT_ID IN (SELECT PROJECT_ID FROM PROJECT WHERE START_DATE BETWEEN '01-JAN-2006' AND '30-JUN-2006')
GROUP BY EMPLOYEE_ID
HAVING COUNT(PROJECT_ID) = (SELECT COUNT(*) FROM PROJECT WHERE START_DATE BETWEEN '01-JAN-2006' AND '30-JUN-2006');

-- 2 (1 REZULTAT: 3)
WITH ANG_2_JOB AS (SELECT EMPLOYEE_ID FROM JOB_HISTORY GROUP BY EMPLOYEE_ID HAVING COUNT(*) = 2)
SELECT PROJECT_ID
FROM WORKS_ON
WHERE EMPLOYEE_ID IN (SELECT * FROM ANG_2_JOB)
GROUP BY PROJECT_ID
HAVING COUNT(EMPLOYEE_ID) = (SELECT COUNT(*) FROM ANG_2_JOB);

-- 3 (1 REZULTAT: 3)
SELECT COUNT(*) ANG_MIN_3_JOB
FROM (SELECT EMPLOYEE_ID
        FROM JOB_HISTORY
        GROUP BY EMPLOYEE_ID
        HAVING COUNT(*) >= 2);
        
-- 4 (4 REZULTATE)
SELECT COUNTRY_NAME TARA, COUNT(*) NR_ANG
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L, COUNTRIES C
WHERE
    E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND D.LOCATION_ID = L.LOCATION_ID
    AND L.COUNTRY_ID = C.COUNTRY_ID
GROUP BY COUNTRY_NAME;

-- 5 (2 REZULTATE)
SELECT E.EMPLOYEE_ID ID_ANG, E.FIRST_NAME || ' ' || E.LAST_NAME NUME_ANG
FROM
    EMPLOYEES E, 
    (WITH PROIECTE_INTARZIATE AS (SELECT PROJECT_ID FROM PROJECT WHERE DELIVERY_DATE > DEADLINE)
    SELECT EMPLOYEE_ID
    FROM WORKS_ON
    WHERE
        PROJECT_ID IN (SELECT * FROM PROIECTE_INTARZIATE)
    GROUP BY EMPLOYEE_ID
    HAVING COUNT(*) >= 2) ANG_MIN_2_INT
WHERE E.EMPLOYEE_ID = ANG_MIN_2_INT.EMPLOYEE_ID;

-- 6 (114 REZULTATE)
SELECT E.EMPLOYEE_ID, W_O.PROJECT_ID
FROM EMPLOYEES E, WORKS_ON W_O
WHERE E.EMPLOYEE_ID = W_O.EMPLOYEE_ID(+);

-- 7 (8 REZULTATE)
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID
                        FROM EMPLOYEES
                        WHERE EMPLOYEE_ID IN (SELECT PROJECT_MANAGER FROM PROJECT));

-- 8 (98 REZULTATE)
SELECT *
FROM EMPLOYEES
WHERE DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID
                            FROM EMPLOYEES
                            WHERE EMPLOYEE_ID IN (SELECT PROJECT_MANAGER FROM PROJECT));

-- 9
SELECT DEPARTMENT_ID ID_DEP, AVG(SALARY) AVG_SAL
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > &MEDIE;

-- 10 (1 REZULTAT: Lex De Haan	17000	2)
SELECT FIRST_NAME || ' ' || LAST_NAME NUME_MNG, SALARY SAL_MNG, NR_PRJ
FROM EMPLOYEES E, (SELECT PROJECT_MANAGER, COUNT(*) NR_PRJ
                    FROM PROJECT
                    GROUP BY PROJECT_MANAGER
                    HAVING COUNT(*) = 2) MNG_2_PRJ
WHERE E.EMPLOYEE_ID = MNG_2_PRJ.PROJECT_MANAGER;

-- 11 (12 REZULTATE)
SELECT E.*
FROM EMPLOYEES E, (SELECT EMPLOYEE_ID
                    FROM WORKS_ON
                    WHERE PROJECT_ID IN (SELECT PROJECT_ID FROM PROJECT WHERE PROJECT_MANAGER = 102)) ANG_PRJ_MNG_102
WHERE E.EMPLOYEE_ID = ANG_PRJ_MNG_102.EMPLOYEE_ID;

-- 12
-- a (4 REZULTATE)
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME NUME_ANG, EMPLOYEE_ID
FROM EMPLOYEES E
WHERE NOT EXISTS (SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = 200
                    MINUS
                    SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = E.EMPLOYEE_ID);
                    
-- b (6 REZULTATE)
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME NUME_ANG, EMPLOYEE_ID
FROM EMPLOYEES E
WHERE
    E.EMPLOYEE_ID IN (SELECT DISTINCT EMPLOYEE_ID FROM WORKS_ON)
    AND NOT EXISTS (SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = E.EMPLOYEE_ID
                    MINUS
                    SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = 200);

-- 13 (3 REZULTATE)
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME NUME_ANG, EMPLOYEE_ID
FROM EMPLOYEES E
WHERE
    NOT EXISTS (SELECT PROJECT_ID
                FROM WORKS_ON
                WHERE EMPLOYEE_ID = 200
                MINUS
                SELECT PROJECT_ID
                FROM WORKS_ON
                WHERE EMPLOYEE_ID = E.EMPLOYEE_ID)
    AND NOT EXISTS (SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = E.EMPLOYEE_ID
                    MINUS
                    SELECT PROJECT_ID
                    FROM WORKS_ON
                    WHERE EMPLOYEE_ID = 200);
        
-- 14
-- a
DESC JOB_GRADES;

SELECT * FROM JOB_GRADES;

-- b (107 REZULTATE) - Nonequijoin
SELECT E.LAST_NAME NUME, E.FIRST_NAME PRENUME, E.SALARY SALARIU, J_G.GRADE_LEVEL GRILA_SAL
FROM EMPLOYEES E, JOB_GRADES J_G
WHERE E.SALARY BETWEEN J_G.LOWEST_SAL AND J_G.HIGHEST_SAL;

-- 15
SELECT EMPLOYEE_ID ID_ANG, LAST_NAME NUME, SALARY SALARIU, DEPARTMENT_ID ID_DEP
FROM EMPLOYEES
WHERE EMPLOYEE_ID = &id;

-- 16
SELECT LAST_NAME, DEPARTMENT_ID, SALARY * 12 SAL_ANUAL
FROM EMPLOYEES
WHERE JOB_ID = UPPER('&job');

-- 17
SELECT LAST_NAME, DEPARTMENT_ID, SALARY * 12 SAL_ANUAL
FROM EMPLOYEES
WHERE HIRE_DATE > TO_DATE(UPPER('&data'), 'DD-MON-YYYY');

-- 18
SELECT &&coloana
FROM &tabel
WHERE &cond
ORDER BY &coloana;
UNDEF coloana;

-- 19
SELECT E.LAST_NAME, E.JOB_ID, E.SALARY, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE
    E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND D.LOCATION_ID = L.LOCATION_ID
    AND UPPER(L.CITY) = UPPER('&oras');

-- 20
ACCEPT data_start PROMPT 'Introduceti data de inceput'
ACCEPT data_final PROMPT 'Introduceti data de sfarsit'
SELECT LAST_NAME || ' ,' || JOB_ID Angajati, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE BETWEEN TO_DATE('&data_start', 'DD/MM/YY') AND TO_DATE('&data_final', 'DD/MM/YY');